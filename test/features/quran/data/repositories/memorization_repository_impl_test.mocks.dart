// Mocks generated by Mockito 5.4.5 from annotations
// in muslim_habbit/test/features/quran/data/repositories/memorization_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:muslim_habbit/core/network/network_info.dart' as _i6;
import 'package:muslim_habbit/features/quran/data/datasources/memorization_local_data_source.dart'
    as _i4;
import 'package:muslim_habbit/features/quran/data/models/memorization_item_model.dart'
    as _i2;
import 'package:muslim_habbit/features/quran/data/models/memorization_preferences_model.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMemorizationItemModel_0 extends _i1.SmartFake
    implements _i2.MemorizationItemModel {
  _FakeMemorizationItemModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMemorizationPreferencesModel_1 extends _i1.SmartFake
    implements _i3.MemorizationPreferencesModel {
  _FakeMemorizationPreferencesModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMemorizationStatisticsModel_2 extends _i1.SmartFake
    implements _i4.MemorizationStatisticsModel {
  _FakeMemorizationStatisticsModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailedMemorizationStatisticsModel_3 extends _i1.SmartFake
    implements _i4.DetailedMemorizationStatisticsModel {
  _FakeDetailedMemorizationStatisticsModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MemorizationLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemorizationLocalDataSource extends _i1.Mock
    implements _i4.MemorizationLocalDataSource {
  MockMemorizationLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.MemorizationItemModel>> getMemorizationItems() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMemorizationItems,
          [],
        ),
        returnValue: _i5.Future<List<_i2.MemorizationItemModel>>.value(
            <_i2.MemorizationItemModel>[]),
      ) as _i5.Future<List<_i2.MemorizationItemModel>>);

  @override
  _i5.Future<_i2.MemorizationItemModel> getMemorizationItemById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMemorizationItemById,
          [id],
        ),
        returnValue: _i5.Future<_i2.MemorizationItemModel>.value(
            _FakeMemorizationItemModel_0(
          this,
          Invocation.method(
            #getMemorizationItemById,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.MemorizationItemModel>);

  @override
  _i5.Future<_i2.MemorizationItemModel> createMemorizationItem(
          _i2.MemorizationItemModel? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMemorizationItem,
          [item],
        ),
        returnValue: _i5.Future<_i2.MemorizationItemModel>.value(
            _FakeMemorizationItemModel_0(
          this,
          Invocation.method(
            #createMemorizationItem,
            [item],
          ),
        )),
      ) as _i5.Future<_i2.MemorizationItemModel>);

  @override
  _i5.Future<_i2.MemorizationItemModel> updateMemorizationItem(
          _i2.MemorizationItemModel? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMemorizationItem,
          [item],
        ),
        returnValue: _i5.Future<_i2.MemorizationItemModel>.value(
            _FakeMemorizationItemModel_0(
          this,
          Invocation.method(
            #updateMemorizationItem,
            [item],
          ),
        )),
      ) as _i5.Future<_i2.MemorizationItemModel>);

  @override
  _i5.Future<void> deleteMemorizationItem(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteMemorizationItem,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.MemorizationItemModel> markItemAsReviewed(String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markItemAsReviewed,
          [itemId],
        ),
        returnValue: _i5.Future<_i2.MemorizationItemModel>.value(
            _FakeMemorizationItemModel_0(
          this,
          Invocation.method(
            #markItemAsReviewed,
            [itemId],
          ),
        )),
      ) as _i5.Future<_i2.MemorizationItemModel>);

  @override
  _i5.Future<_i3.MemorizationPreferencesModel> getPreferences() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPreferences,
          [],
        ),
        returnValue: _i5.Future<_i3.MemorizationPreferencesModel>.value(
            _FakeMemorizationPreferencesModel_1(
          this,
          Invocation.method(
            #getPreferences,
            [],
          ),
        )),
      ) as _i5.Future<_i3.MemorizationPreferencesModel>);

  @override
  _i5.Future<_i3.MemorizationPreferencesModel> updatePreferences(
          _i3.MemorizationPreferencesModel? preferences) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePreferences,
          [preferences],
        ),
        returnValue: _i5.Future<_i3.MemorizationPreferencesModel>.value(
            _FakeMemorizationPreferencesModel_1(
          this,
          Invocation.method(
            #updatePreferences,
            [preferences],
          ),
        )),
      ) as _i5.Future<_i3.MemorizationPreferencesModel>);

  @override
  _i5.Future<_i4.MemorizationStatisticsModel> getMemorizationStatistics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMemorizationStatistics,
          [],
        ),
        returnValue: _i5.Future<_i4.MemorizationStatisticsModel>.value(
            _FakeMemorizationStatisticsModel_2(
          this,
          Invocation.method(
            #getMemorizationStatistics,
            [],
          ),
        )),
      ) as _i5.Future<_i4.MemorizationStatisticsModel>);

  @override
  _i5.Future<_i4.DetailedMemorizationStatisticsModel> getDetailedStatistics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailedStatistics,
          [],
        ),
        returnValue: _i5.Future<_i4.DetailedMemorizationStatisticsModel>.value(
            _FakeDetailedMemorizationStatisticsModel_3(
          this,
          Invocation.method(
            #getDetailedStatistics,
            [],
          ),
        )),
      ) as _i5.Future<_i4.DetailedMemorizationStatisticsModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
