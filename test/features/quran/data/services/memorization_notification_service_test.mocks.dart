// Mocks generated by Mockito 5.4.5 from annotations
// in muslim_habbit/test/features/quran/data/services/memorization_notification_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter/material.dart' as _i6;
import 'package:flutter_local_notifications/flutter_local_notifications.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:muslim_habbit/core/utils/services/notification_service.dart'
    as _i2;
import 'package:muslim_habbit/features/notification/data/models/notification_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i2.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initNotification() => (super.noSuchMethod(
        Invocation.method(
          #initNotification,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> requestPermissions() => (super.noSuchMethod(
        Invocation.method(
          #requestPermissions,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> showNotification({
    required int? id,
    required String? title,
    required String? body,
    String? payload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNotification,
          [],
          {
            #id: id,
            #title: title,
            #body: body,
            #payload: payload,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> scheduledNotification(
          _i4.NotificationModel? notificationModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduledNotification,
          [notificationModel],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> scheduleNotification({
    required int? id,
    required String? title,
    required String? body,
    required DateTime? scheduledDate,
    String? payload,
    bool? repeats = false,
    _i5.RepeatInterval? repeatInterval,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleNotification,
          [],
          {
            #id: id,
            #title: title,
            #body: body,
            #scheduledDate: scheduledDate,
            #payload: payload,
            #repeats: repeats,
            #repeatInterval: repeatInterval,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> scheduleDailyNotification({
    required int? id,
    required String? title,
    required String? body,
    required _i6.TimeOfDay? timeOfDay,
    String? payload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleDailyNotification,
          [],
          {
            #id: id,
            #title: title,
            #body: body,
            #timeOfDay: timeOfDay,
            #payload: payload,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> schedulePrayerNotification({
    required int? id,
    required String? prayerName,
    required DateTime? prayerTime,
    int? minutesBefore = 15,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #schedulePrayerNotification,
          [],
          {
            #id: id,
            #prayerName: prayerName,
            #prayerTime: prayerTime,
            #minutesBefore: minutesBefore,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> scheduleHabitReminder({
    required int? id,
    required String? habitName,
    required _i6.TimeOfDay? reminderTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleHabitReminder,
          [],
          {
            #id: id,
            #habitName: habitName,
            #reminderTime: reminderTime,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancelNotification(int? id) => (super.noSuchMethod(
        Invocation.method(
          #cancelNotification,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancleNotification(int? id) => (super.noSuchMethod(
        Invocation.method(
          #cancleNotification,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAllNotifications() => (super.noSuchMethod(
        Invocation.method(
          #cancelAllNotifications,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
