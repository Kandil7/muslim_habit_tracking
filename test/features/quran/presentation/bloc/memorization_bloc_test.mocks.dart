// Mocks generated by Mockito 5.4.5 from annotations
// in muslim_habbit/test/features/quran/presentation/bloc/memorization_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:muslim_habbit/core/error/failures.dart' as _i6;
import 'package:muslim_habbit/features/quran/domain/entities/memorization_item.dart'
    as _i7;
import 'package:muslim_habbit/features/quran/domain/entities/memorization_preferences.dart'
    as _i15;
import 'package:muslim_habbit/features/quran/domain/entities/review_schedule.dart'
    as _i12;
import 'package:muslim_habbit/features/quran/domain/repositories/memorization_repository.dart'
    as _i2;
import 'package:muslim_habbit/features/quran/domain/usecases/archive_item.dart'
    as _i20;
import 'package:muslim_habbit/features/quran/domain/usecases/create_memorization_item.dart'
    as _i8;
import 'package:muslim_habbit/features/quran/domain/usecases/delete_memorization_item.dart'
    as _i10;
import 'package:muslim_habbit/features/quran/domain/usecases/get_daily_review_schedule.dart'
    as _i11;
import 'package:muslim_habbit/features/quran/domain/usecases/get_detailed_statistics.dart'
    as _i18;
import 'package:muslim_habbit/features/quran/domain/usecases/get_item_review_history.dart'
    as _i25;
import 'package:muslim_habbit/features/quran/domain/usecases/get_items_by_date_range.dart'
    as _i27;
import 'package:muslim_habbit/features/quran/domain/usecases/get_items_by_status.dart'
    as _i19;
import 'package:muslim_habbit/features/quran/domain/usecases/get_items_by_surah.dart'
    as _i26;
import 'package:muslim_habbit/features/quran/domain/usecases/get_items_needing_review.dart'
    as _i24;
import 'package:muslim_habbit/features/quran/domain/usecases/get_memorization_items.dart'
    as _i4;
import 'package:muslim_habbit/features/quran/domain/usecases/get_memorization_preferences.dart'
    as _i14;
import 'package:muslim_habbit/features/quran/domain/usecases/get_memorization_statistics.dart'
    as _i17;
import 'package:muslim_habbit/features/quran/domain/usecases/get_overdue_items.dart'
    as _i22;
import 'package:muslim_habbit/features/quran/domain/usecases/get_progress_statistics.dart'
    as _i29;
import 'package:muslim_habbit/features/quran/domain/usecases/get_streak_statistics.dart'
    as _i28;
import 'package:muslim_habbit/features/quran/domain/usecases/mark_item_as_reviewed.dart'
    as _i13;
import 'package:muslim_habbit/features/quran/domain/usecases/reset_item_progress.dart'
    as _i23;
import 'package:muslim_habbit/features/quran/domain/usecases/unarchive_item.dart'
    as _i21;
import 'package:muslim_habbit/features/quran/domain/usecases/update_memorization_item.dart'
    as _i9;
import 'package:muslim_habbit/features/quran/domain/usecases/update_memorization_preferences.dart'
    as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMemorizationRepository_0 extends _i1.SmartFake
    implements _i2.MemorizationRepository {
  _FakeMemorizationRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetMemorizationItems].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMemorizationItems extends _i1.Mock
    implements _i4.GetMemorizationItems {
  MockGetMemorizationItems() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.MemorizationItem>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>);
}

/// A class which mocks [CreateMemorizationItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateMemorizationItem extends _i1.Mock
    implements _i8.CreateMemorizationItem {
  MockCreateMemorizationItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>> call(
          _i7.MemorizationItem? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [item],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>.value(
                _FakeEither_1<_i6.Failure, _i7.MemorizationItem>(
          this,
          Invocation.method(
            #call,
            [item],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>);
}

/// A class which mocks [UpdateMemorizationItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateMemorizationItem extends _i1.Mock
    implements _i9.UpdateMemorizationItem {
  MockUpdateMemorizationItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>> call(
          _i7.MemorizationItem? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [item],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>.value(
                _FakeEither_1<_i6.Failure, _i7.MemorizationItem>(
          this,
          Invocation.method(
            #call,
            [item],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>);
}

/// A class which mocks [DeleteMemorizationItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteMemorizationItem extends _i1.Mock
    implements _i10.DeleteMemorizationItem {
  MockDeleteMemorizationItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [id],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);
}

/// A class which mocks [GetDailyReviewSchedule].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDailyReviewSchedule extends _i1.Mock
    implements _i11.GetDailyReviewSchedule {
  MockGetDailyReviewSchedule() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i12.ReviewSchedule>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i12.ReviewSchedule>>.value(
                _FakeEither_1<_i6.Failure, _i12.ReviewSchedule>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i12.ReviewSchedule>>);
}

/// A class which mocks [MarkItemAsReviewed].
///
/// See the documentation for Mockito's code generation for more information.
class MockMarkItemAsReviewed extends _i1.Mock
    implements _i13.MarkItemAsReviewed {
  MockMarkItemAsReviewed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>> call(
          String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [itemId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>.value(
                _FakeEither_1<_i6.Failure, _i7.MemorizationItem>(
          this,
          Invocation.method(
            #call,
            [itemId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>);
}

/// A class which mocks [GetMemorizationPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMemorizationPreferences extends _i1.Mock
    implements _i14.GetMemorizationPreferences {
  MockGetMemorizationPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i15.MemorizationPreferences>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.Failure, _i15.MemorizationPreferences>>.value(
            _FakeEither_1<_i6.Failure, _i15.MemorizationPreferences>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i15.MemorizationPreferences>>);
}

/// A class which mocks [UpdateMemorizationPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateMemorizationPreferences extends _i1.Mock
    implements _i16.UpdateMemorizationPreferences {
  MockUpdateMemorizationPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i15.MemorizationPreferences>> call(
          _i15.MemorizationPreferences? preferences) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [preferences],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.Failure, _i15.MemorizationPreferences>>.value(
            _FakeEither_1<_i6.Failure, _i15.MemorizationPreferences>(
          this,
          Invocation.method(
            #call,
            [preferences],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i15.MemorizationPreferences>>);
}

/// A class which mocks [GetMemorizationStatistics].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMemorizationStatistics extends _i1.Mock
    implements _i17.GetMemorizationStatistics {
  MockGetMemorizationStatistics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i2.MemorizationStatistics>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, _i2.MemorizationStatistics>>.value(
            _FakeEither_1<_i6.Failure, _i2.MemorizationStatistics>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i2.MemorizationStatistics>>);
}

/// A class which mocks [GetDetailedStatistics].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDetailedStatistics extends _i1.Mock
    implements _i18.GetDetailedStatistics {
  MockGetDetailedStatistics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i2.DetailedMemorizationStatistics>>
      call() => (super.noSuchMethod(
            Invocation.method(
              #call,
              [],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure,
                        _i2.DetailedMemorizationStatistics>>.value(
                _FakeEither_1<_i6.Failure, _i2.DetailedMemorizationStatistics>(
              this,
              Invocation.method(
                #call,
                [],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i6.Failure, _i2.DetailedMemorizationStatistics>>);
}

/// A class which mocks [GetItemsByStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetItemsByStatus extends _i1.Mock implements _i19.GetItemsByStatus {
  MockGetItemsByStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>> call(
          _i7.MemorizationStatus? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [status],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.MemorizationItem>>(
          this,
          Invocation.method(
            #call,
            [status],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>);
}

/// A class which mocks [ArchiveItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockArchiveItem extends _i1.Mock implements _i20.ArchiveItem {
  MockArchiveItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>> call(
          String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [itemId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>.value(
                _FakeEither_1<_i6.Failure, _i7.MemorizationItem>(
          this,
          Invocation.method(
            #call,
            [itemId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>);
}

/// A class which mocks [UnarchiveItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockUnarchiveItem extends _i1.Mock implements _i21.UnarchiveItem {
  MockUnarchiveItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>> call(
          String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [itemId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>.value(
                _FakeEither_1<_i6.Failure, _i7.MemorizationItem>(
          this,
          Invocation.method(
            #call,
            [itemId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>);
}

/// A class which mocks [GetOverdueItems].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOverdueItems extends _i1.Mock implements _i22.GetOverdueItems {
  MockGetOverdueItems() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.MemorizationItem>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>);
}

/// A class which mocks [ResetItemProgress].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetItemProgress extends _i1.Mock implements _i23.ResetItemProgress {
  MockResetItemProgress() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>> call(
          String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [itemId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>.value(
                _FakeEither_1<_i6.Failure, _i7.MemorizationItem>(
          this,
          Invocation.method(
            #call,
            [itemId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.MemorizationItem>>);
}

/// A class which mocks [GetItemsNeedingReview].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetItemsNeedingReview extends _i1.Mock
    implements _i24.GetItemsNeedingReview {
  MockGetItemsNeedingReview() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.MemorizationItem>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>);
}

/// A class which mocks [GetItemReviewHistory].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetItemReviewHistory extends _i1.Mock
    implements _i25.GetItemReviewHistory {
  MockGetItemReviewHistory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<DateTime>>> call(String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [itemId],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, List<DateTime>>>.value(
            _FakeEither_1<_i6.Failure, List<DateTime>>(
          this,
          Invocation.method(
            #call,
            [itemId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<DateTime>>>);
}

/// A class which mocks [GetItemsBySurah].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetItemsBySurah extends _i1.Mock implements _i26.GetItemsBySurah {
  MockGetItemsBySurah() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>> call(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [surahNumber],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.MemorizationItem>>(
          this,
          Invocation.method(
            #call,
            [surahNumber],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>);
}

/// A class which mocks [GetItemsByDateRange].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetItemsByDateRange extends _i1.Mock
    implements _i27.GetItemsByDateRange {
  MockGetItemsByDateRange() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>> call(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            start,
            end,
          ],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.MemorizationItem>>(
          this,
          Invocation.method(
            #call,
            [
              start,
              end,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.MemorizationItem>>>);
}

/// A class which mocks [GetStreakStatistics].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetStreakStatistics extends _i1.Mock
    implements _i28.GetStreakStatistics {
  MockGetStreakStatistics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i2.StreakStatistics>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i2.StreakStatistics>>.value(
                _FakeEither_1<_i6.Failure, _i2.StreakStatistics>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i2.StreakStatistics>>);
}

/// A class which mocks [GetProgressStatistics].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProgressStatistics extends _i1.Mock
    implements _i29.GetProgressStatistics {
  MockGetProgressStatistics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MemorizationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMemorizationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MemorizationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i2.ProgressStatistics>> call(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            start,
            end,
          ],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i2.ProgressStatistics>>.value(
                _FakeEither_1<_i6.Failure, _i2.ProgressStatistics>(
          this,
          Invocation.method(
            #call,
            [
              start,
              end,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i2.ProgressStatistics>>);
}
